# 005-config.conf
#
# Put container configuration variables here.  This should strictly be for configuration
# variables that are passed into the container.   100% of container configuraiton should
# be possible by setting these variables here or on the 'docker run' command line.

settings: {

  env_set: {

    # This is the hostname of the host machine.  Generally, this is only needed
    # by certain applications (such as those supporting SSL certiifcates, but is common
    # enough to include as a standard option.

    CONFIG_EXT_HOSTNAME: "$(CONFIG_EXT_HOSTNAME:-localhost)",

    # Bind and application configuration settings

    CONFIG_BIND: "$(CONFIG_BIND:-true)",                   # 'true' to enable named on this server
    CONFIG_MANAGER: "$(CONFIG_MANAGER:-true)",             # 'true' to enable apache+mysql+web interface
    CONFIG_PHPMYADMIN: "$(CONFIG_PHPMYADMIN:-false)",      # 'true' to enable phpmyadmin at http://host/phpmyadmin
    CONFIG_APIHOST: "$(CONFIG_APIHOST:-$(CONFIG_EXT_HOSTNAME))", # may include port, such as foo.com:81
    CONFIG_EMAIL: "$(CONFIG_EMAIL:-yourname@example.com)",

    CONFIG_FWD_OK: "192.168.22.0/24; localhost; localnets;",
    CONFIG_FWD_HOST: "192.168.22.4",

    # HTTP ports of exported ports.  These are good policy to define in your "docker run"
    # command so that internal applications know what ports the public interfaces are
    # visible on.  Sometimes this is necessary, such as when appliations push their
    # endpoints via API's or when webservers do redirects.  The default launchers
    # for Chaperone containers handle this for you automatically.

    CONFIG_EXT_HTTP_PORT: "$(CONFIG_EXT_HTTP_PORT:-8080)",
    CONFIG_EXT_HTTPS_PORT: "$(CONFIG_EXT_HTTPS_PORT:-8443)",

    # SSL is required, and defaults to the same hostname
    CONFIG_EXT_SSL_HOSTNAME: "$(CONFIG_EXT_SSL_HOSTNAME:-$(CONFIG_EXT_HOSTNAME))",

    # Create additional configuration variables here.  Start them with "CONFIG_"
    # so they can be easily identified...

  }

}
